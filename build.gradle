plugins {
    id "eu.xenit.docker" version "5.3.2"
    id 'be.vbgn.ci-detect' version '0.5.0'
}

ext {
    base_img = 'open-source.docker.xenit.eu/oracle-python'
    base_img_version = 'main-2.1.2'
    img_version = '2.2.0'
}

createDockerFile {
    from "${base_img}:${base_img_version}"
    smartCopy "$project.projectDir/src/main/docker/docker_root", '/'
    runCommand "yum install -y python3.11-psycopg2"
    runCommand "pip3.11 install --no-cache-dir -r /requirements.txt"
    entryPoint '/swarmclean.py'
}

dockerBuild {
    repositories = ['private.docker.xenit.eu/alfred-ops/swarmclean']
    tags = generateDockerImageTags()
}

def generateDockerImageTags() {
    String timestamp = new Date().format('yyyyMMddHHmmss')

    String branch = ci.reference ?: 'local'

    if (branch == 'local')
        // Only used in local docker-compose.yml
        return ["local-${img_version}", "local-${img_version}-" + timestamp]
    if (branch == 'master')
        return ["${img_version}-" + timestamp]
    // Replace all non-alphanumeric characters by '_' to sanitize for image tag
    return [branch.replaceAll('\\W', '_') + "-${img_version}-" + timestamp]
}
